<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imzhitu.admin.op.mapper.OpChannelMemberMapper">

	<resultMap type="com.imzhitu.admin.common.pojo.OpChannelMemberDTO" id="ChannelMemberMap">
		<result column="channel_member_id" property="channelMemberId" jdbcType="INTEGER" />
		<result column="channel_id" property="channelId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="sub_time" property="subTime" jdbcType="BIGINT" />
		<result column="degree" property="degree" jdbcType="INTEGER" />
		<result column="shield" property="shield" jdbcType="INTEGER" />
		<result column="channel_star" property="channelStar" jdbcType="INTEGER" />
		<result column="notified" property="notified" jdbcType="INTEGER" />
		
		<!-- 下列为父项userInfo的信息，当功能扩展时，可补充查询结果 -->
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_avatar" property="userAvatar" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="user_label" property="userLabel" jdbcType="VARCHAR" />
		<result column="concern_count" property="concernCount" jdbcType="INTEGER" />
		<result column="follow_count" property="followCount" jdbcType="INTEGER" />
		<result column="world_count" property="worldCount" jdbcType="INTEGER" />
		<result column="phone_code" property="phoneCode" jdbcType="INTEGER" />
		<result column="star" property="star" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap type="com.imzhitu.admin.common.pojo.OpChannelMemberDTO" id="ChannelStarScheduleMap">
		<result column="channel_member_id" property="channelMemberId" jdbcType="INTEGER" />
		<result column="channel_id" property="channelId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
	</resultMap>

	<!-- 新增频道成员 -->
	<insert id="insertChannelMember">
		insert hts.operations_channel_member
			(channel_id,user_id,sub_time,degree)
		values
			(#{channelId},#{userId},#{subTime},#{degree})
	</insert>

	<!-- 修改频道成员 -->
	<update id="updateChannelMember">
		update 
			hts.operations_channel_member
		<set>
			<if test="degree != null">
				degree = #{degree},
			</if>
			<if test="shield != null">
				shield = #{shield},
			</if>
			<if test="channelStar != null">
				channel_star = #{channelStar}
			</if>
		</set> 
		<where>
			<if test="channelMemberId != null">
				id = #{channelMemberId}
			</if>
			<if test="userId != null and channelId != null">
				and user_id = #{userId} and channel_id = #{channelId}
			</if>
		</where>
	</update>
	
	<!-- 有输入条件的分页查询 -->
	<select id="queryChannelMember" resultMap="ChannelMemberMap">
		select
			cms.id as channel_member_id,
			cms.channel_id,
			cms.user_id,
			cms.sub_time,
			cms.degree,
			cms.shield,
			cms.channel_star,
			cms.notified,
			u.user_name,
			u.user_avatar,
			u.sex,
			u.user_label,
			u.concern_count,
			u.follow_count,
			u.world_count,
			u.phone_code,
			u.star
		from
			(select
				ocm.id, ocm.channel_id, ocm.user_id, ocm.sub_time, ocm.degree, ocm.shield, ocm.channel_star, ocs.notified
			from
				hts.operations_channel_member ocm
				left join hts.operations_channel_star ocs on ocm.id = ocs.id
			<where>
				<if test="channelId != null">
					and ocm.channel_id = #{channelId}
				</if>
				<if test="userId != null">
					and ocm.user_id = #{userId}
				</if>
				<if test="shield != null">
					and ocm.shield = #{shield}
				</if>
				<if test="notified != null">
					and ocs.notified = #{notified}
				</if>
				<if test="maxId != null and maxId != 0">
					<![CDATA[ and ocm.id <= #{maxId} ]]>
				</if>
			</where>
			order by ocs.serial desc, ocm.id desc
			<include refid="com.imzhitu.admin.common.mapper.NumberMapper.Pagination_Clause" />
			) as cms, hts.user_info u
		<where>
			<if test="star != null">
				u.star = #{star}
			</if>
			<if test="userName != null">
				and u.user_name like CONCAT('%',#{userName},'%')
			</if>
			and cms.user_id = u.id
		</where>
	</select>

	<!-- 有输入条件的查询总数 -->
	<select id="queryChannelMemberTotalCount" resultType="long">
		select 
			count(*) 
		from 
			hts.operations_channel_member ocm,
			hts.user_info u
		<where>
			<if test="channelId != null">
				ocm.channel_id = #{channelId}
			</if>
			<if test="userId != null">
				and ocm.user_id = #{userId}
			</if>
			<if test="shield != null">
				and ocm.shield = #{shield}
			</if>
			<if test="userName != null">
				and u.user_name like CONCAT('%',#{userName},'%')
			</if>
			<if test="maxId != null and maxId != 0">
				<![CDATA[ and ocm.id <= #{maxId} ]]>
			</if>
			and ocm.user_id = u.id
		</where>
	</select>

	<!-- 查询频道成员当前最大id -->
	<select id="getChannelMemberMaxId" resultType="long">
		select 
			max(id)
		from 
			hts.operations_channel_member
	</select>
	
	<!-- 根据频道成员主键id，查询频道成员对象（不携带成员相关联的user信息） -->
	<select id="getChannelMember" resultMap="ChannelMemberMap">
		select 
			ocm.id as channel_member_id,
			ocm.channel_id,
			ocm.user_id,
			ocm.sub_time,
			ocm.degree,
			ocm.shield,
			ocm.channel_star
		from 
			hts.operations_channel_member ocm
		<where>
			<if test="channelMemberId != null">
				ocm.id = #{channelMemberId}
			</if>
			<if test="channelId != null and userId != null">
				and ocm.channel_id = #{channelId} and ocm.user_id = #{userId}
			</if>
		</where>
	</select>
	
	<!-- 新增频道红人 -->
	<insert id="insertChannelStar">
		insert hts.operations_channel_star
			(id, channel_id, user_id, notified, serial)
		values
			(#{channelMemberId}, #{channelId}, #{userId}, #{notified}, #{serial})
	</insert>
	
	<!-- 根据频道红人主键id，查询频道红人对象（不携带成员相关联的user信息） -->
	<select id="getChannelStar" resultMap="ChannelMemberMap">
		select 
			ocs.id as channel_member_id,
			ocs.channel_id,
			ocs.user_id,
			ocs.notified
		from 
			hts.operations_channel_star ocs
		<where>
			<if test="channelMemberId != null">
				ocs.id = #{channelMemberId}
			</if>
			<if test="channelId != null and userId != null">
				and ocs.channel_id = #{channelId} and ocs.user_id = #{userId}
			</if>
		</where> 
	</select>
	
	<!-- 修改频道红人 -->
	<update id="updateChannelStar">
		update 
			hts.operations_channel_star
		<set>
			<if test="notified != null">
				notified = #{notified},
			</if>
			<if test="serial != null">
				serial = #{serial}
			</if>
		</set>
		where id = #{channelMemberId} 
	</update>
	
	<!-- 批量删除频道红人，根据频道红人id集合 -->
	<delete id="deleteChannelStarByIds">
		delete from 
			hts.operations_channel_star 
		where 
			id in
			<foreach item="item" index="index" collection="array"
		    	open="(" separator="," close=")">
		       		#{item}
		 	</foreach>
	</delete>
	
	<!-- 新增频道红人排序调度  -->
	<insert id="insertChannelStarSchedule">
		insert hts_admin.op_channel_star_schedule
			(channel_star_id, channel_id, user_id, schedule_date, operator_id)
		values
			(#{channelMemberDTO.channelMemberId}, #{channelMemberDTO.channelId}, #{channelMemberDTO.userId}, #{scheduleDate}, #{operatorId})
	</insert>
	
	<!-- 更新频道红人排序调度，主要是更新finish状态 -->
	<update id="updateChannelStarSchedule">
		update 
			hts_admin.op_channel_star_schedule
		<set>
			<if test="finish != null">
				finish = #{finish},
			</if>
		</set>
		<where>
			<if test="channelMemberDTO.channelMemberId != null">
				channel_star_id = #{channelMemberDTO.channelMemberId}
			</if>
			<if test="channelMemberDTO.channelId != null and channelMemberDTO.userId != null">
				and channel_id = #{channelMemberDTO.channelId} and user_id = #{channelMemberDTO.userId}
			</if>
		</where>
	</update>
	
	<!-- 查询频道红人排序计划，返回时间间隔中的数据，并且同时根据完成状态进行查询，按照计划排序时间正序获取结果 -->
	<select id="queryChannelStarSchedule" resultMap="ChannelStarScheduleMap">
		select 
			channel_star_id as channel_member_id,
			channel_id,
			user_id
		from 
			hts_admin.op_channel_star_schedule
		<where>
			<if test="startTime != null and endTime != null">
				schedule_date between #{startTime} and #{endTime}
			</if>
			<if test="finish != null">
				and finish = #{finish}
			</if>
		</where>
		order by schedule_date
	</select>
	
</mapper>